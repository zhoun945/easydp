package ${project.groupId}.controller;

import ${project.groupId}.entity.${table.entityName}Entity;
import ${project.groupId}.support.ApiResponse;
import ${project.groupId}.support.Condition;
import ${project.groupId}.service.${table.entityName}Service;
import ${project.groupId}.support.ParamInjector;
import com.github.pagehelper.PageInfo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

/**
 * ${table.comment} Controller
 *
 * @author ${project.author}
 * @date ${project.date}
 */
@RestController
@RequestMapping("/${table.lowerCaseEntityName}")
public class ${table.entityName}Controller extends BaseController {

  @Autowired
  private ${table.entityName}Service ${table.lowerCaseEntityName}Service;

  /**
   * @api {get} /${table.lowerCaseEntityName}/page 分页查询
   * @apiVersion 1.0.0
   * @apiDescription ${table.comment} - 分页查询
   * @apiGroup ${table.lowerCaseEntityName}
   *
   * @apiParam {number} [pageNum=1] 页码
   * @apiParam {number} [pageSize=10] 每页数量
   * @apiParamExample {string} 请求参数格式
   * ?pageNum=1&pageSize=10
   *
   * @apiSuccess {number} code 状态码(0:成功,-1:服务异常,-2:业务提示,-3:认证超时,-4:权限不足)
   * @apiSuccess {string} errMsg 错误信息
   * @apiSuccess {object} data 返回内容
   * @apiSuccess {number} data.total 数据总数
   * @apiSuccess {number} data.pages 页码总数
   * @apiSuccess {array} data.list 数据列表
   * @apiSuccess {number} data.list.id ID
  #foreach($column in ${table.columnList})
   * @apiSuccess {${column.commentType}} data.list.${column.fieldName} ${column.comment}
  #end
   * @apiSuccessExample {json} 正确返回值
   * {"code":0,"errMsg":null,"data":{"total":1,"list":[]}}
   */
  @RequestMapping(value = "/page", method = RequestMethod.GET)
  public ApiResponse<PageInfo<${table.entityName}Entity>> findPage(
      @RequestParam(required = false) Integer pageNum,
      @RequestParam(required = false) Integer pageSize) {

    Condition condition =
        new Condition();
    return ${table.lowerCaseEntityName}Service.findPage(pageNum, pageSize, condition.asMap());
  }

  /**
   * @api {get} /${table.lowerCaseEntityName}/info 详情查询
   * @apiVersion 1.0.0
   * @apiDescription ${table.comment} - 详情查询
   * @apiGroup ${table.lowerCaseEntityName}
   *
   * @apiParam {number} id ID
   * @apiParamExample {string} 请求参数格式
   * /{id}
   *
   * @apiSuccess {number} code 状态码(0:成功,-1:服务异常,-2:业务提示,-3:认证超时,-4:权限不足)
   * @apiSuccess {string} errMsg 错误信息
   * @apiSuccess {object} data 返回内容
   * @apiSuccess {number} data.id ID
  #foreach($column in ${table.columnList})
   * @apiSuccess {${column.commentType}} data.list.${column.fieldName} ${column.comment}
  #end
   * @apiSuccessExample {json} 正确返回值
   * {"code":0,"errMsg":null,"data":{}}
   */
  @RequestMapping(value = "/info/{id}", method = RequestMethod.GET)
  public ApiResponse<${table.entityName}Entity> find(@PathVariable("id") Long id) {
    return ${table.lowerCaseEntityName}Service.find(id);
  }

  /**
   * @api {post} /${table.lowerCaseEntityName}/save 保存信息
   * @apiVersion 1.0.0
   * @apiDescription ${table.comment} - 保存信息
   * @apiGroup ${table.lowerCaseEntityName}
   *
  #foreach($column in ${table.columnList})
   * @apiSuccess {${column.commentType}} data.list.${column.fieldName} ${column.comment}
  #end
   * @apiParamExample {json} 请求参数格式
   * {}
   *
   * @apiSuccess {number} code 状态码(0:成功,-1:服务异常,-2:业务提示,-3:认证超时,-4:权限不足)
   * @apiSuccess {string} errMsg 错误信息
   * @apiSuccess {bool} data 返回内容
   * @apiSuccessExample {json} 正确返回值
   * {"code":0,"errMsg":null,"data":true}
   */
  @RequestMapping(value = "/save", method = RequestMethod.POST)
  public ApiResponse<Boolean> save(@RequestBody ${table.entityName}Entity ${table.lowerCaseEntityName}) {
    ParamInjector.injectProperty(${table.lowerCaseEntityName});
    return ${table.lowerCaseEntityName}Service.save(${table.lowerCaseEntityName});
  }

  /**
   * @api {post} /${table.lowerCaseEntityName}/update 更新信息
   * @apiVersion 1.0.0
   * @apiDescription ${table.comment} - 更新信息
   * @apiGroup ${table.lowerCaseEntityName}
   *
   * @apiParam {number} id ID
  #foreach($column in ${table.columnList})
   * @apiSuccess {${column.commentType}} data.list.${column.fieldName} ${column.comment}
  #end
   * @apiParamExample {json} 请求参数格式
   * {}
   *
   * @apiSuccess {number} code 状态码(0:成功,-1:服务异常,-2:业务提示,-3:认证超时,-4:权限不足)
   * @apiSuccess {string} errMsg 错误信息
   * @apiSuccess {bool} data 返回内容
   * @apiSuccessExample {json} 正确返回值
   * {"code":0,"errMsg":null,"data":true}
   */
  @RequestMapping(value = "/update", method = RequestMethod.POST)
  public ApiResponse<Boolean> update(@RequestBody ${table.entityName}Entity ${table.lowerCaseEntityName}) {
    ParamInjector.injectProperty(${table.lowerCaseEntityName});
    return ${table.lowerCaseEntityName}Service.update(${table.lowerCaseEntityName});
  }

  /**
   * @api {post} /${table.lowerCaseEntityName}/delete 删除信息
   * @apiVersion 1.0.0
   * @apiDescription ${table.comment} - 删除信息
   * @apiGroup ${table.lowerCaseEntityName}
   *
   * @apiParam {number} id ID
   * @apiParamExample {string} 请求参数格式
   * /{id}
   *
   * @apiSuccess {number} code 状态码(0:成功,-1:服务异常,-2:业务提示,-3:认证超时,-4:权限不足)
   * @apiSuccess {string} errMsg 错误信息
   * @apiSuccess {bool} data 返回内容
   * @apiSuccessExample {json} 正确返回值
   * {"code":0,"errMsg":null,"data":true}
   */
  @RequestMapping(value = "/delete/{id}", method = RequestMethod.POST)
  public ApiResponse<Boolean> deleteById(@PathVariable("id") Long id) {
    return ${table.lowerCaseEntityName}Service.deleteById(id);
  }

}
